{"meta":{"title":"ASD","subtitle":"Another Software Developer","description":"Network programming","author":"Another Software Developer","url":"http://yoursite.com"},"pages":[{"title":"404 Page Not Found","date":"2017-03-19T21:40:00.881Z","updated":"2017-03-19T20:32:22.313Z","comments":true,"path":"404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":"Not found."},{"title":"About Me","date":"2017-03-19T22:12:27.566Z","updated":"2017-03-19T22:12:27.536Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"I’m a certified software engineer and each day of my life I want to improve my personal skills as much as it possible. In software development I’m passionate about network programming. I believe that truly useful and high-performance code may be created only due to deep understanding the main problem. Technologies which I use at the moment and want improve: Node.js. Python. TypeScript, ES5\\ES6\\ES7. SQL, MongoDB. Golang. I have a hands-on experience with: OS: Windows XP\\7\\10, Linux(Ubuntu). Python: Flask, Bottle, PyMongo. Node.js: Express, MongoDB-driver for Node.js. C#: ASP.NET MVC\\WEB API 2.0, console application-tools. DataBase: SQL, MySQL, MongoDB. Automation: Grunt, Bash, Batch, Git, TFS. Front-End: ES5\\ES6, TypeScript, Angular1\\2, Ext.js, D3.js, Google APIs. Of course, not all technologies were listed above, because in the last time software development is a fast-growing sphere and a lot of new frameworks, tools, languages that become leaders and solve an existing problem a much better. Updated: 25.08.2016"},{"title":"Categories","date":"2017-03-08T20:53:29.695Z","updated":"2017-03-08T20:53:29.666Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Publications","date":"2017-03-22T22:40:34.300Z","updated":"2017-03-22T22:40:34.276Z","comments":true,"path":"publications/index.html","permalink":"http://yoursite.com/publications/index.html","excerpt":"","text":"Here you can see a list of publications on other web-resources, blogs and thematic sites. Besides articles, there are few books, booklets which have been written by myself and were based on personal observations in specific topics. English 1. Angular.js recipes: viewing around - Little book which exposes the common principles of constructing the application architecture. Russian"},{"title":"Works","date":"2017-03-23T22:57:52.697Z","updated":"2017-03-23T22:57:52.674Z","comments":true,"path":"works/index.html","permalink":"http://yoursite.com/works/index.html","excerpt":"","text":"On this page I share my programs, scripts or helpful solutions with you, that help me to achieve successful results. Sometimes you may see here some non-commercial, personal programs created during my free time. All the same, each of the described programs on this page was written just by myself. Of course, some of the presented programs have been written only for fun, but each of them has a specific part of code, which may be helpful\\interesting for somebody at the moment. I think a decision of separating the inventions into appropriate groups and categories will be a helpful solution to find specific code faster. Total: .Period: 2016 - nowadays."},{"title":"Tags","date":"2017-03-08T20:56:16.776Z","updated":"2017-03-08T20:56:16.751Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"XMPP Messaging - first experience","slug":"xmpp-sockets/xmpp-messaging","date":"2017-03-22T22:41:51.402Z","updated":"2017-03-25T13:24:28.806Z","comments":true,"path":"2017/03/23/xmpp-sockets/xmpp-messaging/","link":"","permalink":"http://yoursite.com/2017/03/23/xmpp-sockets/xmpp-messaging/","excerpt":"XMPP - Extensible Messaging and Presence Protocol, which streams different XML stanzas over a network. It was developed in 1998 and official shared in 1999. A lot of helpful services, technologies and tools were designed by XMPP standard and they exist today.","text":"XMPP - Extensible Messaging and Presence Protocol, which streams different XML stanzas over a network. It was developed in 1998 and official shared in 1999. A lot of helpful services, technologies and tools were designed by XMPP standard and they exist today. OverviewI’ve started use XMPP 2 weeks ago and I absolutely had no idea how it works before. So, my first impression - it is a huge and tremendous technology, which truly can solve a wide range of messaging issues. To start using XMPP over HTTP you should communicate to BOSH - a specific over synchronous HTPP stream. Before we start talking about practical experience I’d like to share with you useful links from official sites: XMPP strengths XMPP weaknesses XMPP official FAQ . Setting the environmentTo start with you need to install and configure a server-side environment in according to official documentation. See list of public &amp; available servers - click here. The next step - necessary to determine the client technology to work with XMPP protocol. See here You may create a any number of chatrooms, use a private\\public conference, broadcast a specific events, accept notifications, transfer images, send smiles etc. It is only a small list of actual XMPP posibilities with whom I’ve dealt. I was pleasantly surprised acknowledging an ability to work with offline messaging. You may specify a delay counter when your stanza should be delivered to your collocutor. FeaturesThe first thing is a format of XMPP messaging - XML stanzas. You may share you presence, build a different server requests but always should use XML elements in a strict respected format. ExampleAssume, client sends request to server: 123456&lt;iq from='hag66@shakespeare.lit/pda' id='h7ns81g' to='shakespeare.lit' type='get'&gt; &lt;query xmlns='http://jabber.org/protocol/disco#items'/&gt;&lt;/iq&gt; And immediately will be informed by appropriate response: 123456789&lt;iq from='shakespeare.lit' id='h7ns81g' to='hag66@shakespeare.lit/pda' type='result'&gt; &lt;query xmlns='http://jabber.org/protocol/disco#items'&gt; &lt;item jid='chat.shakespeare.lit' name='Chatroom Service'/&gt; &lt;/query&gt;&lt;/iq&gt; There are a lot of libraries to build a proper messages - you should just specify a list of arguments &amp; values. One of the most popular JS libraries to work with XMPP are: Strophe.js Stanza.io. I guess, it is cool, cause any developer may be sure that another one uses the same format to build requests. This approach prevents you to make prevalent mistakes or make them less and significantly save your time. ConnectionThroughout all session the client will have a list of event emitters, where each of them depends on some appropriate external event. For example, you connected to the chat-room and if there is some participant, he would be informed by special information stanza. When you leave room, write a message, join group or send invite - all this actions raise proper broadcasts. You may subscribe to person, configure chat-rooms, manage your contact list and more another cool features. ConclusionXMPP - is a cool technology for messaging. If you need to use web-chat and be sure that it will work on cross-platform devices, the choise is clear. Of course, it not only one suitable library to broadcast messages over the browser and any person may use whatever he wants. In the next time I’ll try to share with you some cases of using XMPP. Good luck!","categories":[{"name":"xmpp","slug":"xmpp","permalink":"http://yoursite.com/categories/xmpp/"},{"name":"chat","slug":"xmpp/chat","permalink":"http://yoursite.com/categories/xmpp/chat/"}],"tags":[{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"},{"name":"xmpp","slug":"xmpp","permalink":"http://yoursite.com/tags/xmpp/"},{"name":"strophe.js","slug":"strophe-js","permalink":"http://yoursite.com/tags/strophe-js/"},{"name":"stanza","slug":"stanza","permalink":"http://yoursite.com/tags/stanza/"},{"name":"chat","slug":"chat","permalink":"http://yoursite.com/tags/chat/"},{"name":"web-chat","slug":"web-chat","permalink":"http://yoursite.com/tags/web-chat/"}]},{"title":"Robomongo uses","slug":"database/robomongo-uses","date":"2017-03-21T22:50:28.387Z","updated":"2017-03-26T09:39:06.960Z","comments":true,"path":"2017/03/22/database/robomongo-uses/","link":"","permalink":"http://yoursite.com/2017/03/22/database/robomongo-uses/","excerpt":"Not so long ago I’ve started use a special management tool for MongoDB - Robomongo.","text":"Not so long ago I’ve started use a special management tool for MongoDB - Robomongo. The main features which were interesting for me: simplicity, rapidity and flexibility. Robomongo truly can help you to solve your needs in database refactoring without a lot of unnecessary manual scenarios. Few words about One of the requirements for correct Robomongo work is a “mongod” primary daemon process. If you have any experience with MongoDB, you probably heard about that and used it. RequestsFor example, you need to get all existing users in some table. You may use a special request in shell: 1db.users.find(); or just click on the table in Robomongo and select “View documents“. It’s easy! Actually I’m not a fan of ui tools and I’d like to use a native shell, cause it prevents you from some inexplicable behaviour. You just do only what you want, no more. But Robomongo helps you on the active development stage, when you often modify or change your database scheme, data, documents structure. Find the data, save or modify scheme, load an existing scheme, replace fields etc. It’s a not fully free product, but you can use community version which costs 0$ per month. In this case you could use main Robomongo features, try it in your projects and decide regarding further uses if needed. Impressions Great tool to work with MongoDB. This is especially noticeable when you work with Express.js or other similar framework and design an API to work with database like MongoDB. Many requests, a lot of changes and modifications using Robomongo should prevent you from a mechanical issues or misprints. Cross-platform software. Using tabs, which allows to compare two or more results with each other. Additional snippets, autocomplete. Good luck, have a fun!","categories":[{"name":"mongodb","slug":"mongodb","permalink":"http://yoursite.com/categories/mongodb/"},{"name":"js","slug":"mongodb/js","permalink":"http://yoursite.com/categories/mongodb/js/"}],"tags":[{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"},{"name":"mongo","slug":"mongo","permalink":"http://yoursite.com/tags/mongo/"},{"name":"robomongo","slug":"robomongo","permalink":"http://yoursite.com/tags/robomongo/"},{"name":"sql","slug":"sql","permalink":"http://yoursite.com/tags/sql/"},{"name":"node.js","slug":"node-js","permalink":"http://yoursite.com/tags/node-js/"}]},{"title":"Bitwise Operations","slug":"theory/bitwise-operations","date":"2017-03-08T21:33:12.842Z","updated":"2017-03-25T13:24:28.763Z","comments":true,"path":"2017/03/08/theory/bitwise-operations/","link":"","permalink":"http://yoursite.com/2017/03/08/theory/bitwise-operations/","excerpt":"In this article we’re going to talk about bitwise operations in programming. It’s a very powerful thing, which allows you significantly increase a performance in multiplying, addition and dividing numbers.","text":"In this article we’re going to talk about bitwise operations in programming. It’s a very powerful thing, which allows you significantly increase a performance in multiplying, addition and dividing numbers. Languages: JavaScript, C#. So, let’s start! Assume, we have a number 93. Number: 93. Step 0. 93 in binary system is 1011101. JS: 1console.log( parseInt(1011101, 2) ) // -&gt; 93. C#: 1Console.WriteLine( Convert.ToInt32(\"1011101\", 2) ) // -&gt; 93. Step 1. Due to using operator “&gt;&gt;” in expression 93 &gt;&gt; 1, we tell compiler to do a bit shift for 1 symbol, thus or number 93 will be transformed into 46. JS: 1console.log( parseInt(101110, 2) == 93 &gt;&gt; 1) // -&gt; true. C#: 1Console.WriteLine( 93 &gt;&gt; 1 == Convert.ToInt32(\"101110\", 2) ) // -&gt; true. Clarification: 1011101 -&gt; 93. 101110 -&gt; 46. All existing numbers have to be shifted into right side for 1 sign.So, it means that 1st number will be on the second place, 2nd on the 3rd etc, but the last number leaves collection.As you see we had a last number “1”, but it have to be removed. Step 2. 93 &gt;&gt; 2 == 46 &gt;&gt; 1 -&gt; 23. Step 3. 93 &gt;&gt; 3 == 46 &gt;&gt; 2 == 23 &gt;&gt; 1 -&gt; 11. Step 4. 93 &gt;&gt; 4 == 46 &gt;&gt; 3 == 23 &gt;&gt; 2 == 11 &gt;&gt; 1 -&gt; 5. Step 5. 93 &gt;&gt; 5 == 46 &gt;&gt; 4 == 23 &gt;&gt; 3 == 11 &gt;&gt; 2 == 5 &gt;&gt; 1 -&gt; 2. Step 6. 93 &gt;&gt; 6 == 46 &gt;&gt; 5 == 23 &gt;&gt; 4 == 11 &gt;&gt; 3 == 5 &gt;&gt; 2 == 2 &gt;&gt; 1 -&gt; 1. Step 7. 93 &gt;&gt; 7 == 46 &gt;&gt; 6 == 23 &gt;&gt; 5 == 11 &gt;&gt; 4 == 5 &gt;&gt; 3 == 2 &gt;&gt; 2 == 1 &gt;&gt; 1 -&gt; 0. So, we had a 7 iterations, thereafter the last received sign is zero. All next bit shift operation can’t change that and we’ll have a sign 0 all the time. Shift to left.It is completely opposite to previous method. Compiler will add a 1 sign into the start, which increases the number. Number: 1. Step 0. How we did that? First of all, you have to understand the principle of representation the numbers in binary system. See a table below: Metric system Binary system 0 0 1 1 2 10 3 11 4 100 5 101 6 110 etc . So, when we use operator &lt;&lt; and apply it for number 1, the result will be 2 because we have a bits shift to left. Step 1. 1 &lt;&lt; 1 -&gt; 2. Step 2. 2 &lt;&lt; 1 -&gt; 4. Step 3 (a consistent shift). 1 &lt;&lt; 1 &lt;&lt; 1 -&gt; 4. Let’s check that in C# compiler: 123Console.WriteLine(Convert.ToString(4, 2)); // get a binary system representationConsole.WriteLine(Convert.ToInt32(\"100\", 2)); // convert number into metric systemConsole.WriteLine(1 &lt;&lt; 1 &lt;&lt; 1 == Convert.ToInt32(\"100\", 2)); // compare results Bitwise AND (&amp;).Now let’s talk about common expression task - bitwise and. According to code above, there is no a new principles, just only another representational behaviour. Supposably, we want to use and operator to numbers 5 and 7. So, here is a bits transformation: Metric system Position 3 Position 2 Position 1 5 1 0 1 7 1 1 1 5 1 0 1 Let’s change numbers and now we’re having 9 and 5: Metric system Position 4 Position 3 Position 2 Position 1 9 1 0 0 1 5 0 1 0 1 1 0 0 0 1 Check it using JavaScript: 12console.log( parseInt(101, 2) &amp; parseInt(111, 2) ); // -&gt; 5console.log( parseInt(1001, 2) &amp; parseInt(101, 2) ); // -&gt; 1 Bitwise OR (|).In this case all combinations return 1 except 0 &amp; 0. Example: Position 1 Position 2 Result 0 0 0 0 1 1 1 0 1 1 1 1 Supposably, we use OR operator with numbers 7 and 5, so compiler does the following actions: Metric system Position 3 Position 2 Position 1 5 1 0 1 7 1 1 1 7 1 1 1 Bitwise Exclusive OR (^).Only different signs return “1”, so there are [0 - 1], [1 - 0] combinations, in other cases will returned “0”. Metric system Position 3 Position 2 Position 1 5 1 0 1 7 1 1 1 2 0 1 0 Bitwise Not (~).Replaces each sign to opposite, [0 - 1], [1 - 0]. Sign Result 1 0 0 1 Bitwise Shift Left (&lt;&lt;).This operation is almost equals to the multiplication an existing number by 2. In other words, if we have a number 24 and we have to change it using left shift for 2 signs, will be enough use 2 times multiplication it by 2. 24 &lt;&lt; 2 -&gt; 96. Conclusion.We have discussed about bitwise shift in programming languages. It happens when you work with computer memory, use high-load performance application or integrate your scenarios into the low-level programming. To be continued…","categories":[{"name":"algorithms","slug":"algorithms","permalink":"http://yoursite.com/categories/algorithms/"},{"name":"code","slug":"algorithms/code","permalink":"http://yoursite.com/categories/algorithms/code/"},{"name":"theory","slug":"algorithms/code/theory","permalink":"http://yoursite.com/categories/algorithms/code/theory/"}],"tags":[{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"},{"name":"csharp","slug":"csharp","permalink":"http://yoursite.com/tags/csharp/"},{"name":"c#","slug":"c","permalink":"http://yoursite.com/tags/c/"}]}]}